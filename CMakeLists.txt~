cmake_minimum_required(VERSION 2.8.3)
project(moped_tracker)

find_package(catkin REQUIRED COMPONENTS
  roscpp
  rospy
  cv_bridge
  image_transport
  pr_msgs
)
find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(OpenCV REQUIRED)
MESSAGE(STATUS "OpenCV library is: ${OpenCV_VERSION}")

set(INCLUDE_DIRS ${INCLUDE_DIRS} ${OPENGL_INCLUDE_DIRS}${GLEW_INCLUDE_DIRS}) 
set(LIBS ${LIBS} ${OPENGL_LIBRARY} ${GLEW_LIBRARIES}) 

add_custom_target(BUILD_LIBMOPED DEPENDS libmoped.a ${LIBS})
add_custom_command(OUTPUT libmoped.a 
                   DEPENDS ${PROJECT_SOURCE_DIR}/libmoped/src/moped.cpp
                   DEPENDS ${PROJECT_SOURCE_DIR}/libmoped/src/config.hpp
                   DEPENDS ${PROJECT_SOURCE_DIR}/libmoped/src/util.hpp
                   DEPENDS ${PROJECT_SOURCE_DIR}/libmoped/src/STATUS_DISPLAY.hpp
                   DEPENDS ${PROJECT_SOURCE_DIR}/libmoped/src/GLOBAL_DISPLAY.hpp
                   COMMAND make
                   WORKING_DIRECTORY ${PROJECT_SOURCE_DIR}/libmoped
                   COMMENT Building libmoped.a)

link_directories(${PROJECT_SOURCE_DIR}/libmoped/lib)
include_directories(${PROJECT_SOURCE_DIR}/libmoped/include)

#
catkin_package(

)

include_directories(
  ${catkin_INCLUDE_DIRS}
  ${INCLUDE_DIRS}
)

add_executable(moped2 moped.cpp)
set_target_properties(moped2 PROPERTIES COMPILE_FLAGS "-O3 -Wall -march=native -mfpmath=sse -fopenmp")
set_target_properties(moped2 PROPERTIES LINK_FLAGS "-Wl,--start-group")
target_link_libraries(moped2 gomp  IL ${PROJECT_SOURCE_DIR}/libmoped/lib/libmoped.a ${OpenCV_LIBS} ${catkin_LIBRARIES} )


add_dependencies(moped2 BUILD_LIBMOPED)



add_executable(moped2_test moped_test.cpp)
set_target_properties(moped2_test PROPERTIES COMPILE_FLAGS "-O3 -Wall -march=native -mfpmath=sse -fopenmp")
set_target_properties(moped2_test PROPERTIES LINK_FLAGS "-Wl,--start-group")
target_link_libraries(moped2_test gomp  IL ${PROJECT_SOURCE_DIR}/libmoped/lib/libmoped.a ${OpenCV_LIBS} ${catkin_LIBRARIES})


add_dependencies(moped2_test BUILD_LIBMOPED)


set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)

set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
